// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id          String      @id @default(uuid())
    email       String      @unique
    firstName   String
    lastName    String?
    avatar      String?
    oauthId     String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    campaigns   Campaign[]
    org         Org?
}

model Org {
    id          String      @id @default(uuid())
    name        String
    description String
    avatar      String?
    verified    Boolean     @default(false)
    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      String      @unique
    campaigns   Campaign[]
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model Campaign {
    id              String  @id @default(uuid())
    name            String
    description     String
    avatar          String?
    category        String
    raisedAmount    Float
    goalAmount      Float
    approved        Boolean @default(false)
    owner           String 
    org             Org?    @relation(fields: [orgId], references: [id], onDelete: Cascade)
    orgId           String?
    user            User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId          String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}